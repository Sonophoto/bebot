# Copyright 2012, Dave Ray
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

setup {
  source ../common.soar

  sp {apply*add
    "Multiply a value by 2"
    (state <s> ^operator <o>)
    (<o> ^name add
        ^value <value>
        ^previous <previous>)
  -->
    (<s> ^result (+ <previous> <value>))
    (write (crlf) |Applying add: | <previous> | + | <value>)
  }

  sp {test-list-fold-left*propose*fold-left
    "Map 'double' operator on the input list"
    (state <s> ^name test-list-fold-left
              -^result
              ^input <input>)
    (<input> ^head <head>
            ^initial-value <initial-value>)
  -->
    (<s> ^operator <o>)
    (<o> ^name bebot*list*fold-left
        ^func add
        ^head <head>
        ^initial-value <initial-value>)
  }

}

test fold-left-on-empty-list {
  sp {test-list-fold-left*apply*init
    (state <s> ^operator.name init)
  -->
    (<s> ^name test-list-fold-left
        ^input <input>)
    (<input> ^head nil
            ^initial-value 99)
  }

  sp {pass
    (state <s> ^name test-list-fold-left
              ^result 99)
  -->
    (pass)
  }
}

test fold-left-on-non-empty-list {
  sp {test-list-fold-left*apply*init
    (state <s> ^operator.name init)
  -->
    (<s> ^name test-list-fold-left
        ^input <input>
        ^expected (+ 100 1 2 3 4 5 6))
    (<input> ^head (list 1 2 3 4 5 6)
            ^initial-value 100)
  }

  sp {pass
    (state <s> ^name test-list-fold-left
              ^expected <expected>
              ^result <expected>)
  -->
    (pass)
  }
}

