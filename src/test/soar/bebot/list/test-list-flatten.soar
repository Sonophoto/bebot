# Copyright 2012, Dave Ray
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

setup {
  source ../common.soar

  sp {apply*init*add-state-name
    (state <s> ^operator.name init)
  -->
    (<s> ^name test-flatten)
  }

  sp {propose
    (state <s> ^name test-flatten
              -^result
               ^head <input>)
  -->
    (<s> ^operator <o>)
    (<o> ^name bebot*list*flatten
         ^head <input>)
  }
}

test "can flatten a list that's already flat" {
  sp {apply*init
    (state <s> ^operator.name init)
  -->
    (<s> ^head (list a b c d e))
  }

  sp {pass
    (state <s> ^name test-flatten
               ^result <result>)
    (<result> ^value a ^next <r1>)
    (<r1>     ^value b ^next <r2>)
    (<r2>     ^value c ^next <r3>)
    (<r3>     ^value d ^next <r4>)
    (<r4>     ^value e ^next nil)
  -->
    (pass)
  }
}

test "can flatten an empty list" {
  sp {apply*init
    (state <s> ^operator.name init)
  -->
    (<s> ^head nil)
  }

  sp {pass
    (state <s> ^name test-flatten
               ^result nil)
  -->
    (pass)
  }
}


test "can recursively flatten a list" {
  sp {apply*init
    (state <s> ^operator.name init)
  -->
    (<s> ^head 
      (list a
        (list b
          (list c d)
          e)))
  }

  sp {pass
    (state <s> ^name test-flatten
               ^result <result>)
    (<result> ^value a ^next <r1>)
    (<r1>     ^value b ^next <r2>)
    (<r2>     ^value c ^next <r3>)
    (<r3>     ^value d ^next <r4>)
    (<r4>     ^value e ^next nil)
  -->
    (pass)
  }
}

