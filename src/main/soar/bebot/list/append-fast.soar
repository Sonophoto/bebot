# Copyright 2012, Dave Ray
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# See append-common.soar

sp {bebot*list*append-fast*propose*init
  (state <s> ^name bebot*list*append-fast 
             ^first <> nil
             ^second <> nil
            -^current)
-->
  (<s> ^operator.name bebot*list*append-fast-init)
}

sp {bebot*list*append-fast*apply*init
  (state <s> ^name bebot*list*append-fast
             ^operator.name bebot*list*append-fast-init
             ^first <first>)
-->
  (<s> ^current <first>)
}

sp {bebot*list*append-fast*propose*process
  "If we're not at the last node, propose advancing the current pointer"
  (state <s> ^name bebot*list*append-fast 
             ^current.next <> nil)
-->
  (<s> ^operator.name bebot*list*append-fast-process)
}

sp {bebot*list*append-fast*apply*process-continue
  "Advance the current pointer"
  (state <s> ^name bebot*list*append-fast
             ^operator.name bebot*list*append-fast-process
             ^current <current>)
  (<current> ^next <next>)
-->
  (<s> ^current <current> - <next>)
}

sp {bebot*list*append-fast*propose*splice-and-return
  "If we're at the last node, propose doing the splice operation and returning"
  (state <s> ^name bebot*list*append-fast
             ^current.next nil)
-->
  (<s> ^operator.name bebot*list*append-fast-splice-and-return)
}

sp {bebot*list*append-fast*apply*splice
  "Splice the end of first to second and set the return value in the 
   superstate. By modifying the list, GDS will eliminate the current
   state, which is why we both splice and return here."
  (state <s> ^name bebot*list*append-fast
             ^operator.name bebot*list*append-fast-splice-and-return
             ^return-to <return-to>
             ^superstate <ss>
             ^current <current>
             ^first <first>
             ^second <second>)
  (<current> ^next <next>)
-->
  (<current> ^next <next> - <second>)
  (<ss> ^<return-to> <first>)
}


