# Copyright 2012, Dave Ray
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

##!
# Advance along a list a given number of places and return a list node.
#
# ^operator
#    ^name bebot*list*advance
#    ^head <head-of-list>
#    ^count <number-of-nodes-to-advance> (defaults to 1)
#
# Returns the new list node (head) as well as the actual number of nodes
# advanced. This will be less than count if count is larger than the list.
# 
# ^result
#    ^head  <new-list-head>
#    ^total <actual-number-of-nodes-advanced>

sp {bebot*list*advance*elaborate*info
  "Add info about this operator to the bebot*library structure on the
   top state."
  (state <s> ^superstate nil
             ^bebot*library.operators <ops>)
-->
  (<ops> ^bebot*list*advance <args>)
  (<args> ^default <def> 
          ^required <req>)
  (<def> ^return-to result
         ^count 1)
  (<req> ^head nil)
}

sp {bebot*list*advance*propose*init
  (state <s> ^name bebot*list*advance 
            -^current)
-->
  (<s> ^operator.name bebot*list*advance-init)
}

sp {bebot*list*advance*apply*init
  (state <s> ^name bebot*list*advance
             ^operator.name bebot*list*advance-init
             ^head <head>)
-->
  (<s> ^current <head> 
       ^total 0)
}

sp {bebot*list*advance*propose*process
  (state <s> ^name bebot*list*advance 
             ^current)
-->
  (<s> ^operator.name bebot*list*advance-process)
}

sp {bebot*list*advance*apply*process
  (state <s> ^name bebot*list*advance
             ^operator.name bebot*list*advance-process
             ^count <count>
             ^total { <total> <> <count> }
             ^current <current>)
  (<current> ^next <next>)
-->
  (<s> ^current <current> - <next>
       ^total <total> - (+ <total> 1))
}

sp {bebot*list*advance*apply*process-return
  (state <s> ^name bebot*list*advance 
             ^operator.name bebot*list*advance-process
             ^superstate <ss>
             ^count <total>
             ^total <total>
             ^return-to <return-to>
             ^current <current>)
-->
  (<ss> ^<return-to> <result>)
  (<result> ^head <current>
            ^total <total>)
}

sp {bebot*list*advance*apply*process-return-end-of-list
  (state <s> ^name bebot*list*advance 
             ^operator.name bebot*list*advance-process
             ^superstate <ss>
             ^total <total>
             ^count <> <total>
             ^return-to <return-to>
             ^current nil)
-->
  (<ss> ^<return-to> <result>)
  (<result> ^head nil
            ^total <total>)
}

